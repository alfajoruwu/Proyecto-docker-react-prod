services:

  express:
    build:
      context: ./back
      dockerfile: Dockerfile.build
    ports:
      - ${PORTBACK}:${PORTBACK}
    volumes:
      - ./back:/app
    env_file:
      - .env

  nginx:
    image: nginx
    ports:
      - "81:80"
    volumes:
      - ./front/dist:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    restart: unless-stopped

  postgres:
    image: postgres:17
    env_file:
      - .env
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - postgres_data1:/var/lib/postgresql/data
      - ./DB/init.sql:/docker-entrypoint-initdb.d/init.sql
  
  postgres-usuarios:
    image: postgres:17
    env_file:
      - .env      
    ports:
      - ${POSTGRES_PORT_Usuarios}:${POSTGRES_PORT}
    volumes:
      - postgres_data2:/var/lib/postgresql/data
      - ./DB-Usuarios/init.sh:/docker-entrypoint-initdb.d/init.sh

  adminer:
    image: adminer
    restart: always
    ports:
      - ${ADMINER_PORT}:${ADMINER_PORT}
    environment:
      ADMINER_DEFAULT_SERVER: postgres

  cloudflared:
    image: cloudflare/cloudflared:latest
    container_name: cloudflared
    restart: unless-stopped
    command: tunnel --no-autoupdate run --token ${CLOUDFLARE_TUNNEL_TOKEN}
    env_file:
      - .env

volumes:
  postgres_data1:
  postgres_data2: